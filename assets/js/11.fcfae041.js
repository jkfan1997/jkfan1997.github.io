(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{326:function(e,t,a){},367:function(e,t,a){"use strict";var n=a(326);a.n(n).a},384:function(e,t,a){"use strict";a.r(t);a(168),a(169);var n={name:"vanCheckbox",inject:{CheckboxGroup:{default:""}},computed:{model:{get:function(){return this.isGroup?this.CheckboxGroup.value:this.value},set:function(e){this.isGroup?this.CheckboxGroup.$emit("input",e):this.$emit("input",e)}},isGroup:function(){return!!this.CheckboxGroup},isChecked:function(){return this.isGroup?this.model.includes(this.label):this.model}},props:{value:{type:Boolean,default:!1},label:{type:String,default:""},name:{type:String,defualt:""}}},s=(a(367),a(42)),l=Object(s.a)(n,(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("label",{staticClass:"van-checkbox",class:{"is-checked":e.isChecked}},[a("span",{staticClass:"van-checkbox-input"},[a("span",{staticClass:"van-checkbox-inner"}),e._v(" "),a("input",{directives:[{name:"model",rawName:"v-model",value:e.model,expression:"model"}],staticClass:"van-checkbox-original",attrs:{type:"checkbox",name:e.name},domProps:{value:e.label,checked:Array.isArray(e.model)?e._i(e.model,e.label)>-1:e.model},on:{change:function(t){var a=e.model,n=t.target,s=!!n.checked;if(Array.isArray(a)){var l=e.label,c=e._i(a,l);n.checked?c<0&&(e.model=a.concat([l])):c>-1&&(e.model=a.slice(0,c).concat(a.slice(c+1)))}else e.model=s}}})]),e._v(" "),a("span",{staticClass:"van-checkbox-label"},[e._t("default"),e._v(" "),e.$slots.default?e._e():[e._v("\n   "+e._s(e.label)+"\n    ")]],2)])}),[],!1,null,null,null);t.default=l.exports}}]);